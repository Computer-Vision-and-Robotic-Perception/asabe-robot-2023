### RealSense
# From: https://github.com/IntelRealSense/realsense-ros

# Start the camera node with ros2 run:
ros2 run realsense2_camera realsense2_camera_node

# or, with parameters, for example - temporal and spatial filters are enabled:
ros2 run realsense2_camera realsense2_camera_node --ros-args -p enable_color:=false -p spatial_filter.enable:=true -p temporal_filter.enable:=true

# Start the camera node with with ros2 launch:
ros2 launch realsense2_camera rs_launch.py (*works with rviz and rqt)
ros2 launch realsense2_camera rs_launch.py depth_module.profile:=1280x720x30 pointcloud.enable:=true

### RPLIDAR
# From https://github.com/Slamtec/rplidar_ros/tree/ros2-devel

# The command for RPLIDAR A1 is :
ros2 launch rplidar_ros view_rplidar_a1_launch.py


## Commands for the robot base control:
ros2 control switch_controllers --activate diff_drive_controller
ros2 topic pub --rate 3 /diff_drive_controller/cmd_vel geometry_msgs/msg/TwistStamped "{
    header: auto, 
    twist:{
        linear: {x: 0.1,y: 0,z: 0}, 
        angular: {x: 0, y: 0, z: 0}
    }
}"

ros2 topic pub --rate 2 /diff_drive_controller/cmd_vel_unstamped geometry_msgs/msg/Twist "{
  linear: {x: 0.1,y: 0,z: 0}, 
  angular: {x: 0, y: 0, z: 0}
}"

ros2 control switch_controllers --activate joint_trajectory_controller
ros2 action send_goal /joint_trajectory_controller/follow_joint_trajectory control_msgs/action/FollowJointTrajectory -f "{
  trajectory: {
    joint_names: [Joint_wheel1, Joint_wheel2, Joint_wheel3, Joint_wheel4],
    points: [
      { positions: [10, 10, 10, 10], time_from_start: { sec: 2 } },
      { positions: [-5, -5, -5, -5], time_from_start: { sec: 4 } },
      { positions: [ 0,  0,  0,  0], time_from_start: { sec: 6 } }
    ]
  }
}"

ros2 control switch_controllers --activate velocity_controller
ros2 topic pub -1 /velocity_controller/commands std_msgs/msg/Float64MultiArray "data: [1, 1, 1, 1]"
